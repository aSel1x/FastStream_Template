version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    entrypoint: sh -c "alembic upgrade head && uvicorn app:fastapi --reload"
    volumes:
      - shared-volume:/app/generated_files
    networks:
      - network
    expose:
      - 8000
    ports:
      - "8000:8000"
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: sh -c "alembic upgrade head && taskiq scheduler app:faststream"
    volumes:
      - shared-volume:/app/generated_files
    env_file:
      - .env
    networks:
      - network
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3.12.12-alpine
    env_file:
      - .env
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/data
    networks:
      - network
    expose:
      - 5672
    ports:
      - "5672:5672"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  postgres:
    image: postgres:15.1-alpine
    env_file:
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - network
    expose:
      - 5432
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 80s

volumes:
  postgres-data:
  rabbitmq-data:
  shared-volume:

networks:
  network:
    name: network
