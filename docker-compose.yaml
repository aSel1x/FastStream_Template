version: '3.8'

services:
  backend:
    build: .
    env_file:
      - .env
    entrypoint: >
      sh -c "
      poetry run alembic upgrade head || (echo 'Migration failed' && exit 1);
      poetry run python -m app
      "
    volumes:
      - shared-volume:/app/generated_files
    networks:
      - network
    expose:
      - 8000
    ports:
      - "8000:8000"
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3.12.12-alpine
    environment:
      RABBITMQ_DEFAULT_USER: ${AMQP_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${AMQP_PASSWORD}
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/data
    networks:
      - network
    expose:
      - 5672
    ports:
      - "5672:5672"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  postgres:
    image: postgres:16.4-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - network
    expose:
      - 5432
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}" ]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 80s

  redis:
    image: redis:7.4-alpine
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    volumes:
      - redis-data:/var/lib/redis/data
      - redis-config:/var/lib/redis/redis.conf
    networks:
      - network
    expose:
      - 6379
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 30s
      retries: 5

volumes:
  postgres-data:
  rabbitmq-data:
  redis-data:
  redis-config:
  shared-volume:

networks:
  network:
    name: network
